name: Release Webhook Notification

on:
    release:
        types: [published]

jobs:
    notify-webhook:
        runs-on: ubuntu-latest
        environment: staging

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Send release notification to webhook
              uses: actions/github-script@v7
              with:
                  script: |
                      console.log('Sending release notification to webhook...');
                      const release = context.payload.release;
                      console.log('Release notification triggered!');
                      function cleanChangelog(changelog) {
                        if (!changelog) return '';
                        return changelog
                          .split(/\r?\n/)
                          .map(line => {
                            if (line.toLowerCase().includes('full changelog')) return '';
                            line = line.replace(/by\s+@[\w-]+.*$/i, '');
                            line = line.replace(/@\w+/g, '');
                            line = line.replace(/\bhttps?:\/\/\Spull\S/gi, '');
                            return line.trim();
                          })
                          .filter(line => line.length > 0)
                          .join('\n');
                      }

                      const cleanedBody = cleanChangelog(release.body);
                      console.log('Release Details:', {
                        tag: release.tag_name,
                        name: release.name,
                        url: release.html_url,
                        created_at: release.created_at,
                        published_at: release.published_at,
                        body: cleanedBody || 'No release notes provided'
                      });
                      const payload = {
                        version: release.tag_name,
                        release_name: release.name,
                        release_url: release.html_url,
                        changeLog: cleanedBody || 'No release notes provided',
                        repository: context.repo.repo,
                        type: context.repo.owner,
                        date: new Date().toISOString()
                      };
                      try {
                      console.log('Payload to be sent:', JSON.stringify(payload, null, 2));
                      console.log('Webhook URL:', process.env.WEBHOOK_URL);
                       const response = await fetch(`${process.env.WEBHOOK_URL}?status=draft`, {
                          method: 'POST',
                          headers: {
                            'Authorization': `Bearer ${process.env.API_TOKEN}`,
                            'Content-Type': 'application/json'
                          },
                          body: JSON.stringify(payload)
                        });

                        if (!response.ok) {
                          throw new Error(`Webhook request failed: ${response.status} ${response.statusText}`);
                        }

                        console.log('Response status:', response.status);
                      } catch (error) {
                        console.error('Failed to send webhook notification:', error);
                        core.setFailed(error.message);
                      }
              env:
                WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
                API_TOKEN: ${{ secrets.API_TOKEN }}